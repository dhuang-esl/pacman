name: Create Pacman Package

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  package-macos:
    name: Create macOS Package
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        brew update
        brew install meson ninja pkg-config libarchive curl gpgme openssl@3 nettle python@3.11 bash gettext
        
        # Build comprehensive PKG_CONFIG_PATH
        export PKG_CONFIG_PATH=""
        PKG_CONFIG_PATH="$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gettext)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gpgme)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix curl)/lib/pkgconfig:$PKG_CONFIG_PATH"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
        # Build comprehensive LDFLAGS
        LDFLAGS=""
        LDFLAGS="-L$(brew --prefix openssl@3)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gettext)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix libarchive)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gpgme)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix curl)/lib $LDFLAGS"
        LDFLAGS="-lintl $LDFLAGS"
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
        
        # Build comprehensive CPPFLAGS
        CPPFLAGS=""
        CPPFLAGS="-I$(brew --prefix openssl@3)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gettext)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix libarchive)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gpgme)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix curl)/include $CPPFLAGS"
        echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
        
        # Ensure Homebrew bash is used
        echo "PATH=$(brew --prefix)/bin:$PATH" >> $GITHUB_ENV

    - name: Setup build
      run: meson setup --buildtype=release build

    - name: Build
      run: ninja -C build

    - name: Create comprehensive package
      run: |
        mkdir -p pkg/usr/local/bin
        mkdir -p pkg/usr/local/lib
        mkdir -p pkg/usr/local/share/man/man8
        mkdir -p pkg/usr/local/share/man/man5
        mkdir -p pkg/usr/local/etc
        
        # Copy binaries
        cp build/pacman pkg/usr/local/bin/
        cp build/pacman-conf pkg/usr/local/bin/
        cp build/testpkg pkg/usr/local/bin/
        cp build/vercmp pkg/usr/local/bin/
        
        # Copy libraries
        find build -name "libalpm.*" -exec cp {} pkg/usr/local/lib/ \; || true
        
        # Copy configuration files
        cp etc/pacman.conf.in pkg/usr/local/etc/pacman.conf.example || true
        cp etc/makepkg.conf.in pkg/usr/local/etc/makepkg.conf.example || true
        
        # Create installation script
        cat > pkg/install.sh << 'EOF'
        #!/bin/bash
        echo "Installing Pacman for macOS..."
        
        # Check if running as root
        if [[ $EUID -eq 0 ]]; then
          echo "Don't run this as root. It will install to /usr/local/"
          exit 1
        fi
        
        # Copy files
        sudo cp -r usr/local/* /usr/local/
        
        echo "Pacman installed successfully!"
        echo "Binaries installed to: /usr/local/bin/"
        echo "Libraries installed to: /usr/local/lib/"
        echo "Example configs in: /usr/local/etc/"
        echo ""
        echo "Note: This is pacman built for macOS. Many features may not work as expected."
        echo "This is primarily useful for learning and experimentation."
        EOF
        chmod +x pkg/install.sh
        
        # Create package info
        cat > pkg/README.md << EOF
        # Pacman for macOS
        
        This package contains the Arch Linux package manager (pacman) built for macOS.
        
        ## Installation
        
        1. Extract this package: `tar -xzf pacman-macos-*.tar.gz`
        2. Run the installer: `./install.sh`
        
        ## What's Included
        
        - `pacman` - The main package manager
        - `pacman-conf` - Configuration utility  
        - `testpkg` - Package testing utility
        - `vercmp` - Version comparison utility
        - `libalpm` - Arch Linux Package Management library
        
        ## Important Notes
        
        - This is NOT a replacement for Homebrew or other macOS package managers
        - Many pacman features will not work on macOS due to system differences
        - This build is primarily for educational/experimental purposes
        - No package databases or repositories are included
        
        Built on: $(date)
        Architecture: $(uname -m)
        Commit: $(git rev-parse HEAD 2>/dev/null || echo "unknown")
        EOF
        
        # Create tarball with date
        cd pkg
        tar -czf ../pacman-macos-$(date +%Y%m%d)-$(uname -m).tar.gz .

    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: pacman-macos-package
        path: pacman-macos-*.tar.gz
