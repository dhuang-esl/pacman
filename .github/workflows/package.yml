name: Create Pacman Package

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  package-macos:
    name: Create macOS Package
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        brew update
        brew install meson ninja pkg-config libarchive curl gpgme openssl@3 nettle python@3.11 bash gettext
        
        # Build comprehensive PKG_CONFIG_PATH
        export PKG_CONFIG_PATH=""
        PKG_CONFIG_PATH="$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gettext)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gpgme)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix curl)/lib/pkgconfig:$PKG_CONFIG_PATH"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
        # Build comprehensive LDFLAGS
        LDFLAGS=""
        LDFLAGS="-L$(brew --prefix openssl@3)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gettext)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix libarchive)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gpgme)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix curl)/lib $LDFLAGS"
        LDFLAGS="-lintl $LDFLAGS"
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
        
        # Build comprehensive CPPFLAGS
        CPPFLAGS=""
        CPPFLAGS="-I$(brew --prefix openssl@3)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gettext)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix libarchive)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gpgme)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix curl)/include $CPPFLAGS"
        echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
        
        # Ensure Homebrew bash is used
        echo "PATH=$(brew --prefix)/bin:$PATH" >> $GITHUB_ENV

    - name: Setup build
      run: meson setup --buildtype=release build

    - name: Build
      run: ninja -C build

    - name: Create macOS .pkg installer
      run: |
        # Create package structure
        mkdir -p pkg_root/usr/local/bin
        mkdir -p pkg_root/usr/local/lib
        mkdir -p pkg_root/usr/local/share/man/man8
        mkdir -p pkg_root/usr/local/share/man/man5
        mkdir -p pkg_root/usr/local/etc
        mkdir -p pkg_scripts
        
        # Copy binaries
        cp build/pacman pkg_root/usr/local/bin/
        cp build/pacman-conf pkg_root/usr/local/bin/
        cp build/testpkg pkg_root/usr/local/bin/
        cp build/vercmp pkg_root/usr/local/bin/
        
        # Copy libraries
        find build -name "libalpm.*" -exec cp {} pkg_root/usr/local/lib/ \; || true
        
        # Copy configuration files
        cp etc/pacman.conf.in pkg_root/usr/local/etc/pacman.conf.example || true
        cp etc/makepkg.conf.in pkg_root/usr/local/etc/makepkg.conf.example || true
        
        # Create post-install script
        cat > pkg_scripts/postinstall << 'EOF'
        #!/bin/bash
        
        echo "Pacman for macOS installed successfully!"
        echo ""
        echo "Binaries installed to: /usr/local/bin/"
        echo "Libraries installed to: /usr/local/lib/"
        echo "Example configs in: /usr/local/etc/"
        echo ""
        echo "Add /usr/local/bin to your PATH if not already present:"
        echo "echo 'export PATH=\"/usr/local/bin:\$PATH\"' >> ~/.zshrc"
        echo ""
        echo "IMPORTANT NOTES:"
        echo "- This is pacman built for macOS - many features may not work as expected"
        echo "- This is primarily for educational/experimental purposes"
        echo "- This is NOT a replacement for Homebrew or other macOS package managers"
        echo "- No package databases or repositories are included"
        echo ""
        echo "To verify installation, run: pacman --version"
        
        exit 0
        EOF
        chmod +x pkg_scripts/postinstall
        
        # Create package info
        cat > Distribution.xml << EOF
        <?xml version="1.0" encoding="utf-8"?>
        <installer-gui-script minSpecVersion="1">
            <title>Pacman for macOS</title>
            <organization>Pacman Development Team</organization>
            <domains enable_localSystem="true"/>
            <options customize="never" require-scripts="false" hostArchitectures="x86_64,arm64"/>
            
            <!-- Define documents displayed at various steps -->
            <welcome    file="welcome.html"    mime-type="text/html" />
            <license    file="license.txt"     mime-type="text/plain" />
            <conclusion file="conclusion.html" mime-type="text/html" />
            
            <!-- List all component packages -->
            <pkg-ref id="com.pacman.core"
                     version="7.0.0"
                     auth="root">pacman-core.pkg</pkg-ref>
            
            <!-- List them again here. They can now be organized
                 as a hierarchy if you want. -->
            <choices-outline>
                <line choice="com.pacman.core"/>
            </choices-outline>
            
            <!-- Define each choice above -->
            <choice
                id="com.pacman.core"
                visible="false"
                title="Pacman Core"
                description="Pacman package manager binaries and libraries"
                start_selected="true">
              <pkg-ref id="com.pacman.core"/>
            </choice>
            
        </installer-gui-script>
        EOF
        
        # Create welcome message
        cat > welcome.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Welcome</title>
        </head>
        <body>
            <h1>Welcome to Pacman for macOS</h1>
            <p>This installer will install the Arch Linux package manager (pacman) on your macOS system.</p>
            <p><strong>Important:</strong> This is an experimental build primarily for educational purposes.</p>
            <p>Files will be installed to:</p>
            <ul>
                <li>/usr/local/bin/ - Executables</li>
                <li>/usr/local/lib/ - Libraries</li>
                <li>/usr/local/etc/ - Configuration examples</li>
            </ul>
        </body>
        </html>
        EOF
        
        # Create license file
        cat > license.txt << EOF
        This package contains the Arch Linux package manager (pacman) built for macOS.
        
        Pacman is licensed under the GNU General Public License version 2 or later.
        See the full license at: https://www.gnu.org/licenses/gpl-2.0.html
        
        This build is provided as-is for educational and experimental purposes.
        Many features may not work correctly on macOS due to system differences.
        EOF
        
        # Create conclusion message
        cat > conclusion.html << EOF
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Installation Complete</title>
        </head>
        <body>
            <h1>Installation Complete!</h1>
            <p>Pacman has been successfully installed on your system.</p>
            
            <h2>Next Steps:</h2>
            <ol>
                <li>Open Terminal</li>
                <li>Run: <code>pacman --version</code> to verify installation</li>
                <li>Check example configs in <code>/usr/local/etc/</code></li>
            </ol>
            
            <h2>Important Notes:</h2>
            <ul>
                <li>This is an experimental build for educational purposes</li>
                <li>Many pacman features will not work on macOS</li>
                <li>This does not replace Homebrew or other macOS package managers</li>
            </ul>
        </body>
        </html>
        EOF
        
        # Build component package
        pkgbuild --root pkg_root \
                 --scripts pkg_scripts \
                 --identifier com.pacman.core \
                 --version 7.0.0 \
                 --install-location / \
                 pacman-core.pkg
        
        # Build final installer package
        PACKAGE_NAME="Pacman-macOS-$(date +%Y%m%d)-$(uname -m).pkg"
        productbuild --distribution Distribution.xml \
                     --resources . \
                     --package-path . \
                     "$PACKAGE_NAME"
        
        echo "Created installer: $PACKAGE_NAME"

    - name: Upload macOS .pkg installer
      uses: actions/upload-artifact@v4
      with:
        name: pacman-macos-pkg
        path: Pacman-macOS-*.pkg
