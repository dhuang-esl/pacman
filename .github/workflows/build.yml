name: Build Pacman

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  MAKEFLAGS: "-j4"
  VERBOSE: 1

jobs:
  build-ubuntu:
    name: Build on Ubuntu (Host)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git pkg-config meson gcc libtool \
          libgpgme-dev libarchive-dev libcurl4-openssl-dev libssl-dev \
          gettext python3 python3-setuptools dash gawk \
          fakeroot fakechroot \
          asciidoc

    - name: Setup build
      run: meson setup --buildtype=debug build

    - name: Build
      run: ninja -C build

    - name: Test
      run: fakechroot meson test -C build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pacman-ubuntu-build
        path: |
          build/pacman
          build/pacman-conf
          build/testpkg
          build/vercmp
          build/libalpm.*

    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-ubuntu
        path: build/meson-logs/

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        brew update
        brew install meson ninja pkg-config libarchive curl gpgme openssl@3 nettle python@3.11 bash gettext
        
        # Build comprehensive PKG_CONFIG_PATH
        export PKG_CONFIG_PATH=""
        PKG_CONFIG_PATH="$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gettext)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix gpgme)/lib/pkgconfig:$PKG_CONFIG_PATH"
        PKG_CONFIG_PATH="$(brew --prefix curl)/lib/pkgconfig:$PKG_CONFIG_PATH"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
        # Build comprehensive LDFLAGS
        LDFLAGS=""
        LDFLAGS="-L$(brew --prefix openssl@3)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gettext)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix libarchive)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix gpgme)/lib $LDFLAGS"
        LDFLAGS="-L$(brew --prefix curl)/lib $LDFLAGS"
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
        
        # Build comprehensive CPPFLAGS
        CPPFLAGS=""
        CPPFLAGS="-I$(brew --prefix openssl@3)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gettext)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix libarchive)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix gpgme)/include $CPPFLAGS"
        CPPFLAGS="-I$(brew --prefix curl)/include $CPPFLAGS"
        echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
        
        # Ensure Homebrew bash is used
        echo "PATH=$(brew --prefix)/bin:$PATH" >> $GITHUB_ENV

    - name: Verify bash version
      run: |
        echo "System bash: $(/bin/bash --version | head -1)"
        echo "Homebrew bash: $($(brew --prefix)/bin/bash --version | head -1)"
        echo "Current bash in PATH: $(bash --version | head -1)"
        
        # Verify we have bash >= 4.4.0
        BASH_VERSION=$(bash --version | head -1 | sed 's/.*version \([0-9]*\.[0-9]*\).*/\1/')
        echo "Detected bash version: $BASH_VERSION"

    - name: Verify build environment
      run: |
        echo "=== Environment Check ==="
        echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
        echo "LDFLAGS: $LDFLAGS"
        echo "CPPFLAGS: $CPPFLAGS"
        echo "PATH: $PATH"
        echo ""
        echo "=== Dependency Check ==="
        pkg-config --exists --print-errors libarchive && echo "✅ libarchive found"
        pkg-config --exists --print-errors libcurl && echo "✅ libcurl found" 
        pkg-config --exists --print-errors gpgme && echo "✅ gpgme found"
        pkg-config --exists --print-errors openssl && echo "✅ openssl found"
        ls "$(brew --prefix gettext)/include/libintl.h" && echo "✅ libintl.h found"
        pkg-config --modversion libarchive && echo "libarchive version: $(pkg-config --modversion libarchive)"
        echo ""

    - name: Setup build
      run: meson setup --buildtype=debug build

    - name: Build
      run: ninja -C build

    - name: Test
      run: meson test -C build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pacman-macos-build
        path: |
          build/pacman
          build/pacman-conf
          build/testpkg
          build/vercmp
          build/libalpm.*

    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-macos
        path: build/meson-logs/

  create-release:
    name: Create Release Package
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-macos]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Ubuntu artifacts
      uses: actions/download-artifact@v4
      with:
        name: pacman-ubuntu-build
        path: artifacts/

    - name: Create release tarball
      run: |
        mkdir -p release/pacman-$(date +%Y%m%d)/bin
        cp artifacts/* release/pacman-$(date +%Y%m%d)/bin/ || true
        cd release
        tar -czf pacman-$(date +%Y%m%d).tar.gz pacman-$(date +%Y%m%d)/

    - name: Upload release
      uses: actions/upload-artifact@v4
      with:
        name: pacman-release
        path: release/*.tar.gz
